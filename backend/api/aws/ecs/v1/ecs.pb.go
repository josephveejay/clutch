// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: aws/ecs/v1/ecs.proto

package ecsv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/lyft/clutch/backend/api/api/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetEcsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *GetEcsRequest) Reset() {
	*x = GetEcsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_ecs_v1_ecs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEcsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEcsRequest) ProtoMessage() {}

func (x *GetEcsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_ecs_v1_ecs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEcsRequest.ProtoReflect.Descriptor instead.
func (*GetEcsRequest) Descriptor() ([]byte, []int) {
	return file_aws_ecs_v1_ecs_proto_rawDescGZIP(), []int{0}
}

func (x *GetEcsRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type GetEcsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster []string `protobuf:"bytes,1,rep,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *GetEcsResponse) Reset() {
	*x = GetEcsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_ecs_v1_ecs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEcsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEcsResponse) ProtoMessage() {}

func (x *GetEcsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_ecs_v1_ecs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEcsResponse.ProtoReflect.Descriptor instead.
func (*GetEcsResponse) Descriptor() ([]byte, []int) {
	return file_aws_ecs_v1_ecs_proto_rawDescGZIP(), []int{1}
}

func (x *GetEcsResponse) GetCluster() []string {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type GetEcsSrvRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EcsCluster string `protobuf:"bytes,1,opt,name=ecs_cluster,json=ecsCluster,proto3" json:"ecs_cluster,omitempty"`
	Region     string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *GetEcsSrvRequest) Reset() {
	*x = GetEcsSrvRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_ecs_v1_ecs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEcsSrvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEcsSrvRequest) ProtoMessage() {}

func (x *GetEcsSrvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_ecs_v1_ecs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEcsSrvRequest.ProtoReflect.Descriptor instead.
func (*GetEcsSrvRequest) Descriptor() ([]byte, []int) {
	return file_aws_ecs_v1_ecs_proto_rawDescGZIP(), []int{2}
}

func (x *GetEcsSrvRequest) GetEcsCluster() string {
	if x != nil {
		return x.EcsCluster
	}
	return ""
}

func (x *GetEcsSrvRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type GetEcsSrvResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service []string `protobuf:"bytes,1,rep,name=service,proto3" json:"service,omitempty"`
}

func (x *GetEcsSrvResponse) Reset() {
	*x = GetEcsSrvResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_ecs_v1_ecs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEcsSrvResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEcsSrvResponse) ProtoMessage() {}

func (x *GetEcsSrvResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_ecs_v1_ecs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEcsSrvResponse.ProtoReflect.Descriptor instead.
func (*GetEcsSrvResponse) Descriptor() ([]byte, []int) {
	return file_aws_ecs_v1_ecs_proto_rawDescGZIP(), []int{3}
}

func (x *GetEcsSrvResponse) GetService() []string {
	if x != nil {
		return x.Service
	}
	return nil
}

type GetEcsSrvTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EcsClusterservice string `protobuf:"bytes,1,opt,name=ecs_clusterservice,json=ecsClusterservice,proto3" json:"ecs_clusterservice,omitempty"`
	EcsCluster        string `protobuf:"bytes,2,opt,name=ecs_cluster,json=ecsCluster,proto3" json:"ecs_cluster,omitempty"`
	Region            string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *GetEcsSrvTaskRequest) Reset() {
	*x = GetEcsSrvTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_ecs_v1_ecs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEcsSrvTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEcsSrvTaskRequest) ProtoMessage() {}

func (x *GetEcsSrvTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_ecs_v1_ecs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEcsSrvTaskRequest.ProtoReflect.Descriptor instead.
func (*GetEcsSrvTaskRequest) Descriptor() ([]byte, []int) {
	return file_aws_ecs_v1_ecs_proto_rawDescGZIP(), []int{4}
}

func (x *GetEcsSrvTaskRequest) GetEcsClusterservice() string {
	if x != nil {
		return x.EcsClusterservice
	}
	return ""
}

func (x *GetEcsSrvTaskRequest) GetEcsCluster() string {
	if x != nil {
		return x.EcsCluster
	}
	return ""
}

func (x *GetEcsSrvTaskRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type GetEcsSrvTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//repeated TaskDefEnvs envar = 1;
	Env map[string]string `protobuf:"bytes,1,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetEcsSrvTaskResponse) Reset() {
	*x = GetEcsSrvTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_ecs_v1_ecs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEcsSrvTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEcsSrvTaskResponse) ProtoMessage() {}

func (x *GetEcsSrvTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_ecs_v1_ecs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEcsSrvTaskResponse.ProtoReflect.Descriptor instead.
func (*GetEcsSrvTaskResponse) Descriptor() ([]byte, []int) {
	return file_aws_ecs_v1_ecs_proto_rawDescGZIP(), []int{5}
}

func (x *GetEcsSrvTaskResponse) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

var File_aws_ecs_v1_ecs_proto protoreflect.FileDescriptor

var file_aws_ecs_v1_ecs_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x77, 0x73, 0x2f, 0x65, 0x63, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x63, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61,
	0x77, 0x73, 0x2e, 0x65, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x45, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x63, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22,
	0x9b, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x63, 0x73, 0x53, 0x72, 0x76, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0b, 0x65, 0x63, 0x73, 0x5f, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x20, 0x01, 0x52, 0x0a, 0x65, 0x63, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x3a,
	0x3c, 0xb2, 0xe1, 0x1c, 0x38, 0x0a, 0x36, 0x0a, 0x1c, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e,
	0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63, 0x73, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x16, 0x7b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x7d, 0x2f,
	0x7b, 0x65, 0x63, 0x73, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x7d, 0x22, 0x2d, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x45, 0x63, 0x73, 0x53, 0x72, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xec, 0x01, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x45, 0x63, 0x73, 0x53, 0x72, 0x76, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x12, 0x65, 0x63, 0x73, 0x5f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x11, 0x65, 0x63, 0x73, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a,
	0x0b, 0x65, 0x63, 0x73, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x0a, 0x65, 0x63, 0x73,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01,
	0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x3a, 0x51, 0xb2, 0xe1, 0x1c, 0x4d, 0x0a, 0x4b,
	0x0a, 0x1c, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x32,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x63, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2b,
	0x7b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x7b, 0x65, 0x63, 0x73, 0x5f, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x7d, 0x2f, 0x7b, 0x65, 0x63, 0x73, 0x5f, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x7d, 0x22, 0x94, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x45, 0x63, 0x73, 0x53, 0x72, 0x76, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e,
	0x65, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x63, 0x73, 0x53, 0x72, 0x76,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6e, 0x76,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x1a, 0x36, 0x0a, 0x08, 0x45, 0x6e,
	0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x32, 0xbd, 0x03, 0x0a, 0x06, 0x45, 0x63, 0x73, 0x41, 0x50, 0x49, 0x12, 0x7f, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x45, 0x43, 0x53, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x20, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65,
	0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x77, 0x73, 0x2f, 0x65, 0x63, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x3a, 0x01, 0x2a, 0xaa, 0xe1, 0x1c, 0x02, 0x08, 0x02, 0x12, 0x8f,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x43, 0x53, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63,
	0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x63, 0x73, 0x53, 0x72, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x63, 0x73, 0x53, 0x72, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x77, 0x73, 0x2f, 0x65, 0x63, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x72, 0x76, 0x73, 0x3a, 0x01, 0x2a, 0xaa, 0xe1, 0x1c, 0x02, 0x08, 0x02,
	0x12, 0x9f, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x45, 0x43, 0x53, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x72, 0x76, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x66, 0x12, 0x27, 0x2e, 0x63,
	0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x65, 0x63, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x63, 0x73, 0x53, 0x72, 0x76, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2e, 0x61,
	0x77, 0x73, 0x2e, 0x65, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x63, 0x73,
	0x53, 0x72, 0x76, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x77, 0x73,
	0x2f, 0x65, 0x63, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x72, 0x76, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x66, 0x3a, 0x01, 0x2a, 0xaa, 0xe1, 0x1c, 0x02,
	0x08, 0x02, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x79, 0x66, 0x74, 0x2f, 0x63, 0x6c, 0x75, 0x74, 0x63, 0x68, 0x2f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x77, 0x73, 0x2f, 0x65, 0x63, 0x73,
	0x2f, 0x76, 0x31, 0x3b, 0x65, 0x63, 0x73, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_aws_ecs_v1_ecs_proto_rawDescOnce sync.Once
	file_aws_ecs_v1_ecs_proto_rawDescData = file_aws_ecs_v1_ecs_proto_rawDesc
)

func file_aws_ecs_v1_ecs_proto_rawDescGZIP() []byte {
	file_aws_ecs_v1_ecs_proto_rawDescOnce.Do(func() {
		file_aws_ecs_v1_ecs_proto_rawDescData = protoimpl.X.CompressGZIP(file_aws_ecs_v1_ecs_proto_rawDescData)
	})
	return file_aws_ecs_v1_ecs_proto_rawDescData
}

var file_aws_ecs_v1_ecs_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_aws_ecs_v1_ecs_proto_goTypes = []interface{}{
	(*GetEcsRequest)(nil),         // 0: clutch.aws.ecs.v1.GetEcsRequest
	(*GetEcsResponse)(nil),        // 1: clutch.aws.ecs.v1.GetEcsResponse
	(*GetEcsSrvRequest)(nil),      // 2: clutch.aws.ecs.v1.GetEcsSrvRequest
	(*GetEcsSrvResponse)(nil),     // 3: clutch.aws.ecs.v1.GetEcsSrvResponse
	(*GetEcsSrvTaskRequest)(nil),  // 4: clutch.aws.ecs.v1.GetEcsSrvTaskRequest
	(*GetEcsSrvTaskResponse)(nil), // 5: clutch.aws.ecs.v1.GetEcsSrvTaskResponse
	nil,                           // 6: clutch.aws.ecs.v1.GetEcsSrvTaskResponse.EnvEntry
}
var file_aws_ecs_v1_ecs_proto_depIdxs = []int32{
	6, // 0: clutch.aws.ecs.v1.GetEcsSrvTaskResponse.env:type_name -> clutch.aws.ecs.v1.GetEcsSrvTaskResponse.EnvEntry
	0, // 1: clutch.aws.ecs.v1.EcsAPI.GetECSClusters:input_type -> clutch.aws.ecs.v1.GetEcsRequest
	2, // 2: clutch.aws.ecs.v1.EcsAPI.GetECSClusterServices:input_type -> clutch.aws.ecs.v1.GetEcsSrvRequest
	4, // 3: clutch.aws.ecs.v1.EcsAPI.GetECSClusterSrvTaskDef:input_type -> clutch.aws.ecs.v1.GetEcsSrvTaskRequest
	1, // 4: clutch.aws.ecs.v1.EcsAPI.GetECSClusters:output_type -> clutch.aws.ecs.v1.GetEcsResponse
	3, // 5: clutch.aws.ecs.v1.EcsAPI.GetECSClusterServices:output_type -> clutch.aws.ecs.v1.GetEcsSrvResponse
	5, // 6: clutch.aws.ecs.v1.EcsAPI.GetECSClusterSrvTaskDef:output_type -> clutch.aws.ecs.v1.GetEcsSrvTaskResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_aws_ecs_v1_ecs_proto_init() }
func file_aws_ecs_v1_ecs_proto_init() {
	if File_aws_ecs_v1_ecs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aws_ecs_v1_ecs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEcsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_ecs_v1_ecs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEcsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_ecs_v1_ecs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEcsSrvRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_ecs_v1_ecs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEcsSrvResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_ecs_v1_ecs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEcsSrvTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_ecs_v1_ecs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEcsSrvTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aws_ecs_v1_ecs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aws_ecs_v1_ecs_proto_goTypes,
		DependencyIndexes: file_aws_ecs_v1_ecs_proto_depIdxs,
		MessageInfos:      file_aws_ecs_v1_ecs_proto_msgTypes,
	}.Build()
	File_aws_ecs_v1_ecs_proto = out.File
	file_aws_ecs_v1_ecs_proto_rawDesc = nil
	file_aws_ecs_v1_ecs_proto_goTypes = nil
	file_aws_ecs_v1_ecs_proto_depIdxs = nil
}
